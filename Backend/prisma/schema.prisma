// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role{
  admin
  user
  regionAdmin
}
model User{
  id                     Int                 @id @default(autoincrement())
  username               String              @unique
  email                  String?             @unique
  passwordhash           String
  createdAt              DateTime            @default(now())
  savedSongs             SavedSong[]
  role                   Role                @default(user)
  isBanned               Boolean             @default(false)
  refreshToken           String?
  region                 String?
}
model Song{
  id                     Int                 @id @default(autoincrement())
  title                  String
  artist                 String
  coverUrl               String
  ranking                SongRanking[]
  savedBy                SavedSong[]
}
model SavedSong{
  id                     Int                 @id @default(autoincrement())
  song                   Song                @relation(fields: [songId], references: [id])
  songId                 Int
  user                   User                @relation(fields: [userId], references: [id])
  userId                 Int
  lat                    Float
  lng                    Float
  region                 String?

  @@index([lat, lng])
  @@unique([songId, userId])
}
model SongRanking{
  id                     Int                 @id @default(autoincrement())
  lat                    Float
  lng                    Float
  song                   Song                @relation(fields: [songId], references: [id])
  songId                 Int
  score                  Int

  @@index([lat, lng])
}
